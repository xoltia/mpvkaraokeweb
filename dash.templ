package mpvwebkaraoke

import (
    "net/url"
	"fmt"
)

type Member struct {
    Session
    QueueOpen bool
}

func urlDomain(urlString string) string {
    u, err := url.Parse(urlString)
    if err != nil {
        return ""
    }
    return u.Host
}

func adminSession(ctx context.Context) bool {
    session, ok := ctx.Value(sessionKey).(Session)
    return ok && session.Admin
}

func matchSession(ctx context.Context, sid string) bool {
    session, ok := ctx.Value(sessionKey).(Session)
    return ok && session.ID == sid
}

templ queuePage(songs []Song) {
        <html>
            <head>
                <title>Queue</title>
                <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                <meta charset="utf-8" />
                <script src="https://unpkg.com/htmx.org@1.9.10"
                    integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC"
                    crossorigin="anonymous"></script>
                <script src="https://unpkg.com/htmx.org@1.9.11/dist/ext/sse.js"></script>
                <link rel="stylesheet" href="/style.css" />
            </head>
            <body class="bg-neutral-900 text-neutral-100">
                <div class="container mx-auto py-8 max-w-6xl px-2 md:px-0"
                    hx-ext="sse"
                    sse-connect="/sse"
                >
                    <div class="flex flex-col md:flex-row gap-4">
                        <div class="grow-0 md:w-1/3">
                            <div  class="bg-neutral-800 p-4 rounded-md">
                                <h1 class="text-2xl mb-3">Current Song</h1>
                                @currentlyPlaying(nil, true)
                            </div>
                            <div class="bg-neutral-800 p-4 rounded-md mt-4">
                                <h1 class="text-2xl mb-3">Members</h1>
                                <div hx-get="/queue/members" hx-swap="outerHTML" hx-trigger="load">
                                    <p>Loading...</p>
                                </div>
                            </div>
                        </div>
                        <div class="grow-1 md:grow-0 md:w-2/3">
                            <div class="bg-neutral-800 p-4 rounded-md">
                                <div class="flex justify-between items-center mb-4">
                                    <h1 class="text-2xl">Queue</h1>
                                    <a href="/queue/request" class="bg-pink-300 text-white px-4 py-2 rounded-md">Request a Song</a>
                                </div>
                                @queueTable(songs)
                            </div>
                        </div>
                    </div>
                </div>
            </body>
        </html>
}

templ membersList(sessions []Member) {
    <ul class="list-none" hx-get="/queue/members" hx-swap="outerHTML"
        hx-trigger="sse:session:join, sse:queue:change">
        for _, session := range sessions {
            <li class="flex items-center gap-2 mb-2">
                if session.Admin {
                    <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" color="#dfa0ca" stroke-width="1.5">
                        <title>Admin</title>
                        <path d="M4.63495 14.4151L5.67396 12.2121C5.80734 11.9293 6.19266 11.9293 6.32604 12.2121L7.36505 14.4151L9.68859 14.7706C9.98671 14.8162 10.1055 15.1997 9.8897 15.4198L8.2087 17.1334L8.60542 19.5543C8.65636 19.8652 8.34456 20.1022 8.07781 19.9554L6 18.8118L3.92219 19.9554C3.65544 20.1022 3.34363 19.8652 3.39458 19.5543L3.7913 17.1334L2.1103 15.4198C1.89447 15.1997 2.01329 14.8162 2.31141 14.7706L4.63495 14.4151Z"  
                            fill="#dfa0ca" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                        <path d="M16.6349 14.4151L17.674 12.2121C17.8073 11.9293 18.1927 11.9293 18.326 12.2121L19.3651 14.4151L21.6886 14.7706C21.9867 14.8162 22.1055 15.1997 21.8897 15.4198L20.2087 17.1334L20.6054 19.5543C20.6564 19.8652 20.3446 20.1022 20.0778 19.9554L18 18.8118L15.9222 19.9554C15.6554 20.1022 15.3436 19.8652 15.3946 19.5543L15.7913 17.1334L14.1103 15.4198C13.8945 15.1997 14.0133 14.8162 14.3114 14.7706L16.6349 14.4151Z"
                            fill="#dfa0ca" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                        <path d="M10.6349 5.41515L11.674 3.21211C11.8073 2.9293 12.1927 2.9293 12.326 3.21211L13.3651 5.41515L15.6886 5.7706C15.9867 5.8162 16.1055 6.19974 15.8897 6.41976L14.2087 8.13337L14.6054 10.5543C14.6564 10.8652 14.3446 11.1022 14.0778 10.9554L12 9.81178L9.92219 10.9554C9.65544 11.1022 9.34363 10.8652 9.39458 10.5543L9.7913 8.13337L8.1103 6.41976C7.89447 6.19974 8.01329 5.8162 8.31141 5.7706L10.6349 5.41515Z"
                            fill="#dfa0ca" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg>
                } else if session.QueueOpen {
                    <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" color="#dfa0ca" stroke-width="1.5">
                        <title>Queue Available</title>
                        <path d="M8.58737 8.23597L11.1849 3.00376C11.5183 2.33208 12.4817 2.33208 12.8151 3.00376L15.4126 8.23597L21.2215 9.08017C21.9668 9.18848 22.2638 10.0994 21.7243 10.6219L17.5217 14.6918L18.5135 20.4414C18.6409 21.1798 17.8614 21.7428 17.1945 21.3941L12 18.678L6.80547 21.3941C6.1386 21.7428 5.35909 21.1798 5.48645 20.4414L6.47825 14.6918L2.27575 10.6219C1.73617 10.0994 2.03322 9.18848 2.77852 9.08017L8.58737 8.23597Z" 
                            fill="#dfa0ca" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg>
                } else {
                <svg width="24px" height="24px" stroke-width="1.5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" color="#dfa0ca">
                    <title>Queue Full</title>
                    <path d="M13.8062 5L12.8151 3.00376C12.4817 2.33208 11.5184 2.33208 11.1849 3.00376L10.6894 4.00188" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M15.011 7.427L15.4126 8.23599L16.8648 8.44704" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M19.7693 8.86914L21.2215 9.08019C21.9668 9.1885 22.2639 10.0994 21.7243 10.6219L20.6736 11.6394" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M18.5724 13.6743L17.5217 14.6918L17.7697 16.1292" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M18.2656 19.0039L18.5135 20.4413C18.6409 21.1797 17.8614 21.7427 17.1945 21.394L15.8959 20.715" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M10.4279 19.5L12 18.678L13.2986 19.357" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M5.67145 19.3689L5.48645 20.4414C5.35908 21.1797 6.13859 21.7428 6.80546 21.3941L7.65273 20.9511" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M6.25259 16L6.47826 14.6917L5.78339 14.0188" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.69875 12L2.27575 10.6219C1.73617 10.0993 2.03322 9.18844 2.77852 9.08012L3.88926 8.9187" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    <path d="M7 8.4666L8.58737 8.23591L9.39062 6.61792" stroke="#dfa0ca" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
                }

                <span>{session.UserName}</span>
            </li>
        }
    </ul>
}

templ queueTable(songs []Song) {
        <div class="grid grid-cols-1 gap-4" sse-swap="queue:set" hx-swap="outerHTML">
            if len(songs) == 0 {
                <p class="text-lg">No songs in the queue</p>
            } else {
                for _, song := range songs {
                     @songRow(song)
                }
            }
            <div sse-swap="queue:push" hx-swap="beforebegin"></div>
        </div>
}

templ songRow(song Song) {
    <div class="bg-neutral-700 p-4 rounded-md flex items-center gap-4 flex-col md:flex-row"
        sse-swap={fmt.Sprintf("queue:remove:%d", song.ID)} hx-swap="delete">
        <img src={song.Thumbnail} alt={song.Title} class="md:h-16 md:w-38 aspect-video rounded-md" />
        <div>
            <h2 class="text-lg font-bold leading-tight">
                <a href={templ.URL(song.URL)} target="_blank" class="text-sky-300">{song.Title}</a>
            </h2>
            <p class="text-sm">
                Requested by: {song.Requester.UserName} - Duration: {song.Duration.String()}
            </p>
        </div>
    </div>
}

templ currentlyPlaying(song *Song, firstLoad bool) {
    if firstLoad {
        <p class="text-lg" hx-get="/queue/current" hx-swap="outerHTML" hx-trigger="load">
            Loading...
        </p>
    } else if song == nil {
        <p class="text-lg" hx-get="/queue/current" hx-swap="outerHTML" hx-trigger="sse:queue:change">
            No song currently playing
        </p>
    } else {
        <div class="flex items-center" hx-get="/queue/current" hx-swap="outerHTML" hx-trigger="sse:queue:change">
            <img src={song.Thumbnail} alt={song.Title} class="h-16 w-38 rounded-md" />
            <div class="ml-4">
                <h2 class="text-lg font-bold leading-tight mb-1 line-clamp-2">
                    <a href={templ.URL(song.URL)} target="_blank">{song.Title}</a>
                </h2>
                <span class="text-sm">Requested by {song.Requester.UserName}</span>
                if song.LyricsURL.Valid {
                    <small class="block">
                        <a href={templ.URL(song.LyricsURL.String)} target="_blank" class="text-sky-300">View Lyrics</a>
                    </small>
                }
            </div>
        </div>
    }
}